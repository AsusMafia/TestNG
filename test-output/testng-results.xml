<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-01-12T14:14:17 EST" name="Suite" finished-at="2020-01-12T14:17:46 EST" duration-ms="208897">
    <groups>
    </groups>
    <test started-at="2020-01-12T14:14:17 EST" name="Test" finished-at="2020-01-12T14:17:46 EST" duration-ms="208897">
      <class name="com.Class02.AssertionExercise">
        <test-method is-config="true" signature="login()[pri:0, instance:com.Class02.AssertionExercise@7fc2413d]" started-at="2020-01-12T14:16:24 EST" name="login" finished-at="2020-01-12T14:17:21 EST" duration-ms="56230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="addEmp()[pri:0, instance:com.Class02.AssertionExercise@7fc2413d]" started-at="2020-01-12T14:17:21 EST" name="addEmp" finished-at="2020-01-12T14:17:46 EST" duration-ms="24899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addEmp -->
        <test-method is-config="true" signature="close()[pri:0, instance:com.Class02.AssertionExercise@7fc2413d]" started-at="2020-01-12T14:17:46 EST" name="close" finished-at="2020-01-12T14:17:46 EST" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- com.Class02.AssertionExercise -->
      <class name="com.Class02.AssertionsDemo">
        <test-method is-config="true" signature="openAndNavigate()[pri:0, instance:com.Class02.AssertionsDemo@6293abcc]" started-at="2020-01-12T14:14:18 EST" name="openAndNavigate" finished-at="2020-01-12T14:14:31 EST" duration-ms="13714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAndNavigate -->
        <test-method signature="logoValidation()[pri:0, instance:com.Class02.AssertionsDemo@6293abcc]" started-at="2020-01-12T14:14:31 EST" name="logoValidation" finished-at="2020-01-12T14:14:31 EST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoValidation -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.Class02.AssertionsDemo@6293abcc]" started-at="2020-01-12T14:14:31 EST" name="quit" finished-at="2020-01-12T14:14:32 EST" duration-ms="716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="openAndNavigate()[pri:0, instance:com.Class02.AssertionsDemo@6293abcc]" started-at="2020-01-12T14:14:32 EST" name="openAndNavigate" finished-at="2020-01-12T14:14:46 EST" duration-ms="13908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAndNavigate -->
        <test-method signature="titleVerification()[pri:0, instance:com.Class02.AssertionsDemo@6293abcc]" started-at="2020-01-12T14:14:46 EST" name="titleVerification" finished-at="2020-01-12T14:14:46 EST" duration-ms="17" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Titles are matched! expected [Human Management System+Wrong] but found [Human Management System]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Titles are matched! expected [Human Management System+Wrong] but found [Human Management System]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at com.Class02.AssertionsDemo.titleVerification(AssertionsDemo.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleVerification -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.Class02.AssertionsDemo@6293abcc]" started-at="2020-01-12T14:14:46 EST" name="quit" finished-at="2020-01-12T14:14:47 EST" duration-ms="747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="openAndNavigate()[pri:0, instance:com.Class02.AssertionsDemo@6293abcc]" started-at="2020-01-12T14:14:47 EST" name="openAndNavigate" finished-at="2020-01-12T14:15:16 EST" duration-ms="28816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAndNavigate -->
        <test-method signature="validLogin()[pri:0, instance:com.Class02.AssertionsDemo@6293abcc]" started-at="2020-01-12T14:15:16 EST" name="validLogin" finished-at="2020-01-12T14:15:30 EST" duration-ms="14182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.Class02.AssertionsDemo@6293abcc]" started-at="2020-01-12T14:15:30 EST" name="quit" finished-at="2020-01-12T14:15:30 EST" duration-ms="732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.Class02.AssertionsDemo -->
      <class name="com.Class02.SoftAssertionDemo">
        <test-method is-config="true" signature="open()[pri:0, instance:com.Class02.SoftAssertionDemo@7995092a]" started-at="2020-01-12T14:15:30 EST" name="open" finished-at="2020-01-12T14:16:05 EST" duration-ms="34906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open -->
        <test-method signature="logoAndLogin()[pri:0, instance:com.Class02.SoftAssertionDemo@7995092a]" started-at="2020-01-12T14:16:05 EST" name="logoAndLogin" finished-at="2020-01-12T14:16:24 EST" duration-ms="18413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoAndLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Class02.SoftAssertionDemo@7995092a]" started-at="2020-01-12T14:16:24 EST" name="tearDown" finished-at="2020-01-12T14:16:24 EST" duration-ms="695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Class02.SoftAssertionDemo -->
      <class name="com.Class01.TestNGDemo">
        <test-method signature="testOne()[pri:0, instance:com.Class01.TestNGDemo@f8c1ddd]" started-at="2020-01-12T14:17:46 EST" name="testOne" finished-at="2020-01-12T14:17:46 EST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOne -->
        <test-method signature="testThree()[pri:0, instance:com.Class01.TestNGDemo@f8c1ddd]" started-at="2020-01-12T14:17:46 EST" name="testThree" finished-at="2020-01-12T14:17:46 EST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThree -->
        <test-method signature="testTwo()[pri:0, instance:com.Class01.TestNGDemo@f8c1ddd]" started-at="2020-01-12T14:17:46 EST" name="testTwo" finished-at="2020-01-12T14:17:46 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwo -->
      </class> <!-- com.Class01.TestNGDemo -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
